// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: pkg/proto/appointment.proto

package appointment

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Appointment struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PatientId             uint32                 `protobuf:"varint,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	IsEmergency           bool                   `protobuf:"varint,3,opt,name=is_emergency,json=isEmergency,proto3" json:"is_emergency,omitempty"`
	ProcedureId           uint32                 `protobuf:"varint,4,opt,name=procedure_id,json=procedureId,proto3" json:"procedure_id,omitempty"`
	ReportId              uint32                 `protobuf:"varint,5,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	ReferringDoctorId     uint32                 `protobuf:"varint,6,opt,name=referring_doctor_id,json=referringDoctorId,proto3" json:"referring_doctor_id,omitempty"`
	ReportingDoctorId     uint32                 `protobuf:"varint,7,opt,name=reporting_doctor_id,json=reportingDoctorId,proto3" json:"reporting_doctor_id,omitempty"`
	AppointmentTime       *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=appointment_time,json=appointmentTime,proto3" json:"appointment_time,omitempty"`
	OrganizationId        uint32                 `protobuf:"varint,9,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	PaymentId             uint32                 `protobuf:"varint,10,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Note                  string                 `protobuf:"bytes,11,opt,name=note,proto3" json:"note,omitempty"`
	Status                string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	RequestForm           []*RequestForm         `protobuf:"bytes,13,rep,name=request_form,json=requestForm,proto3" json:"request_form,omitempty"`
	HasPaidCommission     bool                   `protobuf:"varint,14,opt,name=has_paid_commission,json=hasPaidCommission,proto3" json:"has_paid_commission,omitempty"`
	CreatedAt             *timestamp.Timestamp   `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	OriginalAppointmentId uint32                 `protobuf:"varint,16,opt,name=original_appointment_id,json=originalAppointmentId,proto3" json:"original_appointment_id,omitempty"`
	ParentAppointmentId   uint32                 `protobuf:"varint,17,opt,name=parent_appointment_id,json=parentAppointmentId,proto3" json:"parent_appointment_id,omitempty"`
	Version               int32                  `protobuf:"varint,18,opt,name=version,proto3" json:"version,omitempty"`
	IsActive              bool                   `protobuf:"varint,19,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	IsOriginal            bool                   `protobuf:"varint,20,opt,name=is_original,json=isOriginal,proto3" json:"is_original,omitempty"`
	ModifiedBy            uint32                 `protobuf:"varint,22,opt,name=modified_by,json=modifiedBy,proto3" json:"modified_by,omitempty"`
	ModificationReason    string                 `protobuf:"bytes,23,opt,name=modification_reason,json=modificationReason,proto3" json:"modification_reason,omitempty"`
	ModifiedAt            *timestamp.Timestamp   `protobuf:"bytes,24,opt,name=modified_at,json=modifiedAt,proto3" json:"modified_at,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Appointment) Reset() {
	*x = Appointment{}
	mi := &file_pkg_proto_appointment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Appointment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Appointment) ProtoMessage() {}

func (x *Appointment) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_appointment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Appointment.ProtoReflect.Descriptor instead.
func (*Appointment) Descriptor() ([]byte, []int) {
	return file_pkg_proto_appointment_proto_rawDescGZIP(), []int{0}
}

func (x *Appointment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Appointment) GetPatientId() uint32 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *Appointment) GetIsEmergency() bool {
	if x != nil {
		return x.IsEmergency
	}
	return false
}

func (x *Appointment) GetProcedureId() uint32 {
	if x != nil {
		return x.ProcedureId
	}
	return 0
}

func (x *Appointment) GetReportId() uint32 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

func (x *Appointment) GetReferringDoctorId() uint32 {
	if x != nil {
		return x.ReferringDoctorId
	}
	return 0
}

func (x *Appointment) GetReportingDoctorId() uint32 {
	if x != nil {
		return x.ReportingDoctorId
	}
	return 0
}

func (x *Appointment) GetAppointmentTime() *timestamp.Timestamp {
	if x != nil {
		return x.AppointmentTime
	}
	return nil
}

func (x *Appointment) GetOrganizationId() uint32 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *Appointment) GetPaymentId() uint32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *Appointment) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Appointment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Appointment) GetRequestForm() []*RequestForm {
	if x != nil {
		return x.RequestForm
	}
	return nil
}

func (x *Appointment) GetHasPaidCommission() bool {
	if x != nil {
		return x.HasPaidCommission
	}
	return false
}

func (x *Appointment) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Appointment) GetOriginalAppointmentId() uint32 {
	if x != nil {
		return x.OriginalAppointmentId
	}
	return 0
}

func (x *Appointment) GetParentAppointmentId() uint32 {
	if x != nil {
		return x.ParentAppointmentId
	}
	return 0
}

func (x *Appointment) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Appointment) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Appointment) GetIsOriginal() bool {
	if x != nil {
		return x.IsOriginal
	}
	return false
}

func (x *Appointment) GetModifiedBy() uint32 {
	if x != nil {
		return x.ModifiedBy
	}
	return 0
}

func (x *Appointment) GetModificationReason() string {
	if x != nil {
		return x.ModificationReason
	}
	return ""
}

func (x *Appointment) GetModifiedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ModifiedAt
	}
	return nil
}

type ReportVersion struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReportId        uint32                 `protobuf:"varint,2,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	RadiologistId   uint32                 `protobuf:"varint,3,opt,name=radiologist_id,json=radiologistId,proto3" json:"radiologist_id,omitempty"`
	Findings        string                 `protobuf:"bytes,4,opt,name=findings,proto3" json:"findings,omitempty"`
	Impressions     string                 `protobuf:"bytes,5,opt,name=impressions,proto3" json:"impressions,omitempty"`
	ClinicalDetails string                 `protobuf:"bytes,6,opt,name=clinical_details,json=clinicalDetails,proto3" json:"clinical_details,omitempty"`
	Url             string                 `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Status          string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	NoHeaderUrl     string                 `protobuf:"bytes,9,opt,name=no_header_url,json=noHeaderUrl,proto3" json:"no_header_url,omitempty"`
	ConfirmedAt     *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=confirmed_at,json=confirmedAt,proto3" json:"confirmed_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReportVersion) Reset() {
	*x = ReportVersion{}
	mi := &file_pkg_proto_appointment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportVersion) ProtoMessage() {}

func (x *ReportVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_appointment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportVersion.ProtoReflect.Descriptor instead.
func (*ReportVersion) Descriptor() ([]byte, []int) {
	return file_pkg_proto_appointment_proto_rawDescGZIP(), []int{1}
}

func (x *ReportVersion) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReportVersion) GetReportId() uint32 {
	if x != nil {
		return x.ReportId
	}
	return 0
}

func (x *ReportVersion) GetRadiologistId() uint32 {
	if x != nil {
		return x.RadiologistId
	}
	return 0
}

func (x *ReportVersion) GetFindings() string {
	if x != nil {
		return x.Findings
	}
	return ""
}

func (x *ReportVersion) GetImpressions() string {
	if x != nil {
		return x.Impressions
	}
	return ""
}

func (x *ReportVersion) GetClinicalDetails() string {
	if x != nil {
		return x.ClinicalDetails
	}
	return ""
}

func (x *ReportVersion) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ReportVersion) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReportVersion) GetNoHeaderUrl() string {
	if x != nil {
		return x.NoHeaderUrl
	}
	return ""
}

func (x *ReportVersion) GetConfirmedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ConfirmedAt
	}
	return nil
}

type Report struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppointmentId     uint32                 `protobuf:"varint,2,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	ReferringHospital string                 `protobuf:"bytes,3,opt,name=referring_hospital,json=referringHospital,proto3" json:"referring_hospital,omitempty"`
	IsCompleted       bool                   `protobuf:"varint,4,opt,name=is_completed,json=isCompleted,proto3" json:"is_completed,omitempty"`
	Versions          []*ReportVersion       `protobuf:"bytes,5,rep,name=versions,proto3" json:"versions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Report) Reset() {
	*x = Report{}
	mi := &file_pkg_proto_appointment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_appointment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_pkg_proto_appointment_proto_rawDescGZIP(), []int{2}
}

func (x *Report) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Report) GetAppointmentId() uint32 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *Report) GetReferringHospital() string {
	if x != nil {
		return x.ReferringHospital
	}
	return ""
}

func (x *Report) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

func (x *Report) GetVersions() []*ReportVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type RequestForm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppointmentId uint32                 `protobuf:"varint,2,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	IsFile        bool                   `protobuf:"varint,4,opt,name=is_file,json=isFile,proto3" json:"is_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestForm) Reset() {
	*x = RequestForm{}
	mi := &file_pkg_proto_appointment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestForm) ProtoMessage() {}

func (x *RequestForm) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_appointment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestForm.ProtoReflect.Descriptor instead.
func (*RequestForm) Descriptor() ([]byte, []int) {
	return file_pkg_proto_appointment_proto_rawDescGZIP(), []int{3}
}

func (x *RequestForm) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestForm) GetAppointmentId() uint32 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *RequestForm) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RequestForm) GetIsFile() bool {
	if x != nil {
		return x.IsFile
	}
	return false
}

type ModifyProcedure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldVersion    *Appointment           `protobuf:"bytes,1,opt,name=old_version,json=oldVersion,proto3" json:"old_version,omitempty"`
	NewVersion    *Appointment           `protobuf:"bytes,2,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModifyProcedure) Reset() {
	*x = ModifyProcedure{}
	mi := &file_pkg_proto_appointment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifyProcedure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyProcedure) ProtoMessage() {}

func (x *ModifyProcedure) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_appointment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyProcedure.ProtoReflect.Descriptor instead.
func (*ModifyProcedure) Descriptor() ([]byte, []int) {
	return file_pkg_proto_appointment_proto_rawDescGZIP(), []int{4}
}

func (x *ModifyProcedure) GetOldVersion() *Appointment {
	if x != nil {
		return x.OldVersion
	}
	return nil
}

func (x *ModifyProcedure) GetNewVersion() *Appointment {
	if x != nil {
		return x.NewVersion
	}
	return nil
}

var File_pkg_proto_appointment_proto protoreflect.FileDescriptor

const file_pkg_proto_appointment_proto_rawDesc = "" +
	"\n" +
	"\x1bpkg/proto/appointment.proto\x12\x05proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xaf\a\n" +
	"\vAppointment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x02 \x01(\rR\tpatientId\x12!\n" +
	"\fis_emergency\x18\x03 \x01(\bR\visEmergency\x12!\n" +
	"\fprocedure_id\x18\x04 \x01(\rR\vprocedureId\x12\x1b\n" +
	"\treport_id\x18\x05 \x01(\rR\breportId\x12.\n" +
	"\x13referring_doctor_id\x18\x06 \x01(\rR\x11referringDoctorId\x12.\n" +
	"\x13reporting_doctor_id\x18\a \x01(\rR\x11reportingDoctorId\x12E\n" +
	"\x10appointment_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x0fappointmentTime\x12'\n" +
	"\x0forganization_id\x18\t \x01(\rR\x0eorganizationId\x12\x1d\n" +
	"\n" +
	"payment_id\x18\n" +
	" \x01(\rR\tpaymentId\x12\x12\n" +
	"\x04note\x18\v \x01(\tR\x04note\x12\x16\n" +
	"\x06status\x18\f \x01(\tR\x06status\x125\n" +
	"\frequest_form\x18\r \x03(\v2\x12.proto.RequestFormR\vrequestForm\x12.\n" +
	"\x13has_paid_commission\x18\x0e \x01(\bR\x11hasPaidCommission\x129\n" +
	"\n" +
	"created_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x126\n" +
	"\x17original_appointment_id\x18\x10 \x01(\rR\x15originalAppointmentId\x122\n" +
	"\x15parent_appointment_id\x18\x11 \x01(\rR\x13parentAppointmentId\x12\x18\n" +
	"\aversion\x18\x12 \x01(\x05R\aversion\x12\x1b\n" +
	"\tis_active\x18\x13 \x01(\bR\bisActive\x12\x1f\n" +
	"\vis_original\x18\x14 \x01(\bR\n" +
	"isOriginal\x12\x1f\n" +
	"\vmodified_by\x18\x16 \x01(\rR\n" +
	"modifiedBy\x12/\n" +
	"\x13modification_reason\x18\x17 \x01(\tR\x12modificationReason\x12;\n" +
	"\vmodified_at\x18\x18 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"modifiedAt\"\xd9\x02\n" +
	"\rReportVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1b\n" +
	"\treport_id\x18\x02 \x01(\rR\breportId\x12%\n" +
	"\x0eradiologist_id\x18\x03 \x01(\rR\rradiologistId\x12\x1a\n" +
	"\bfindings\x18\x04 \x01(\tR\bfindings\x12 \n" +
	"\vimpressions\x18\x05 \x01(\tR\vimpressions\x12)\n" +
	"\x10clinical_details\x18\x06 \x01(\tR\x0fclinicalDetails\x12\x10\n" +
	"\x03url\x18\a \x01(\tR\x03url\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\"\n" +
	"\rno_header_url\x18\t \x01(\tR\vnoHeaderUrl\x12=\n" +
	"\fconfirmed_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\vconfirmedAt\"\xc3\x01\n" +
	"\x06Report\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12%\n" +
	"\x0eappointment_id\x18\x02 \x01(\rR\rappointmentId\x12-\n" +
	"\x12referring_hospital\x18\x03 \x01(\tR\x11referringHospital\x12!\n" +
	"\fis_completed\x18\x04 \x01(\bR\visCompleted\x120\n" +
	"\bversions\x18\x05 \x03(\v2\x14.proto.ReportVersionR\bversions\"o\n" +
	"\vRequestForm\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12%\n" +
	"\x0eappointment_id\x18\x02 \x01(\rR\rappointmentId\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x17\n" +
	"\ais_file\x18\x04 \x01(\bR\x06isFile\"{\n" +
	"\x0fModifyProcedure\x123\n" +
	"\vold_version\x18\x01 \x01(\v2\x12.proto.AppointmentR\n" +
	"oldVersion\x123\n" +
	"\vnew_version\x18\x02 \x01(\v2\x12.proto.AppointmentR\n" +
	"newVersionB\x17Z\x15pkg/proto/appointmentb\x06proto3"

var (
	file_pkg_proto_appointment_proto_rawDescOnce sync.Once
	file_pkg_proto_appointment_proto_rawDescData []byte
)

func file_pkg_proto_appointment_proto_rawDescGZIP() []byte {
	file_pkg_proto_appointment_proto_rawDescOnce.Do(func() {
		file_pkg_proto_appointment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_appointment_proto_rawDesc), len(file_pkg_proto_appointment_proto_rawDesc)))
	})
	return file_pkg_proto_appointment_proto_rawDescData
}

var file_pkg_proto_appointment_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_proto_appointment_proto_goTypes = []any{
	(*Appointment)(nil),         // 0: proto.Appointment
	(*ReportVersion)(nil),       // 1: proto.ReportVersion
	(*Report)(nil),              // 2: proto.Report
	(*RequestForm)(nil),         // 3: proto.RequestForm
	(*ModifyProcedure)(nil),     // 4: proto.ModifyProcedure
	(*timestamp.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_pkg_proto_appointment_proto_depIdxs = []int32{
	5, // 0: proto.Appointment.appointment_time:type_name -> google.protobuf.Timestamp
	3, // 1: proto.Appointment.request_form:type_name -> proto.RequestForm
	5, // 2: proto.Appointment.created_at:type_name -> google.protobuf.Timestamp
	5, // 3: proto.Appointment.modified_at:type_name -> google.protobuf.Timestamp
	5, // 4: proto.ReportVersion.confirmed_at:type_name -> google.protobuf.Timestamp
	1, // 5: proto.Report.versions:type_name -> proto.ReportVersion
	0, // 6: proto.ModifyProcedure.old_version:type_name -> proto.Appointment
	0, // 7: proto.ModifyProcedure.new_version:type_name -> proto.Appointment
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pkg_proto_appointment_proto_init() }
func file_pkg_proto_appointment_proto_init() {
	if File_pkg_proto_appointment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_appointment_proto_rawDesc), len(file_pkg_proto_appointment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_appointment_proto_goTypes,
		DependencyIndexes: file_pkg_proto_appointment_proto_depIdxs,
		MessageInfos:      file_pkg_proto_appointment_proto_msgTypes,
	}.Build()
	File_pkg_proto_appointment_proto = out.File
	file_pkg_proto_appointment_proto_goTypes = nil
	file_pkg_proto_appointment_proto_depIdxs = nil
}
