// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: pkg/proto/tasks.proto

package tasks

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TaskNotification represents a notification about a task
type TaskNotification struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskId           string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId           uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationType string                 `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"` // task_assigned, task_reassigned, deadline_approaching, deadline_exceeded, comment_added, attachment_uploaded, task_completed
	Subject          string                 `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Message          string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// Task context
	AppointmentId uint32               `protobuf:"varint,6,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	PatientName   string               `protobuf:"bytes,7,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`
	Modality      string               `protobuf:"bytes,8,opt,name=modality,proto3" json:"modality,omitempty"`
	Procedure     string               `protobuf:"bytes,9,opt,name=procedure,proto3" json:"procedure,omitempty"`
	DueDate       *timestamp.Timestamp `protobuf:"bytes,10,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	Deadline      *timestamp.Timestamp `protobuf:"bytes,11,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Priority      string               `protobuf:"bytes,12,opt,name=priority,proto3" json:"priority,omitempty"`
	// Time-based fields (optional, depending on notification type)
	HoursUntilDue int32 `protobuf:"varint,13,opt,name=hours_until_due,json=hoursUntilDue,proto3" json:"hours_until_due,omitempty"`
	DaysOverdue   int32 `protobuf:"varint,14,opt,name=days_overdue,json=daysOverdue,proto3" json:"days_overdue,omitempty"`
	// Notification delivery preferences
	SendEmail     bool   `protobuf:"varint,15,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	SendInApp     bool   `protobuf:"varint,16,opt,name=send_in_app,json=sendInApp,proto3" json:"send_in_app,omitempty"`
	EmailAddress  string `protobuf:"bytes,17,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskNotification) Reset() {
	*x = TaskNotification{}
	mi := &file_pkg_proto_tasks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskNotification) ProtoMessage() {}

func (x *TaskNotification) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_tasks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskNotification.ProtoReflect.Descriptor instead.
func (*TaskNotification) Descriptor() ([]byte, []int) {
	return file_pkg_proto_tasks_proto_rawDescGZIP(), []int{0}
}

func (x *TaskNotification) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskNotification) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TaskNotification) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *TaskNotification) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TaskNotification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskNotification) GetAppointmentId() uint32 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *TaskNotification) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *TaskNotification) GetModality() string {
	if x != nil {
		return x.Modality
	}
	return ""
}

func (x *TaskNotification) GetProcedure() string {
	if x != nil {
		return x.Procedure
	}
	return ""
}

func (x *TaskNotification) GetDueDate() *timestamp.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *TaskNotification) GetDeadline() *timestamp.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *TaskNotification) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *TaskNotification) GetHoursUntilDue() int32 {
	if x != nil {
		return x.HoursUntilDue
	}
	return 0
}

func (x *TaskNotification) GetDaysOverdue() int32 {
	if x != nil {
		return x.DaysOverdue
	}
	return 0
}

func (x *TaskNotification) GetSendEmail() bool {
	if x != nil {
		return x.SendEmail
	}
	return false
}

func (x *TaskNotification) GetSendInApp() bool {
	if x != nil {
		return x.SendInApp
	}
	return false
}

func (x *TaskNotification) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

// TaskEscalation represents an escalation notification to admins
type TaskEscalation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AdminId       uint32                 `protobuf:"varint,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	AppointmentId uint32                 `protobuf:"varint,3,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	PatientName   string                 `protobuf:"bytes,4,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`
	Modality      string                 `protobuf:"bytes,5,opt,name=modality,proto3" json:"modality,omitempty"`
	AssignedTo    string                 `protobuf:"bytes,6,opt,name=assigned_to,json=assignedTo,proto3" json:"assigned_to,omitempty"` // Name of person task is assigned to
	DaysOverdue   int32                  `protobuf:"varint,7,opt,name=days_overdue,json=daysOverdue,proto3" json:"days_overdue,omitempty"`
	Priority      string                 `protobuf:"bytes,8,opt,name=priority,proto3" json:"priority,omitempty"`
	Deadline      *timestamp.Timestamp   `protobuf:"bytes,9,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Subject       string                 `protobuf:"bytes,10,opt,name=subject,proto3" json:"subject,omitempty"`
	Message       string                 `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
	// Notification delivery preferences
	SendEmail     bool   `protobuf:"varint,12,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	SendInApp     bool   `protobuf:"varint,13,opt,name=send_in_app,json=sendInApp,proto3" json:"send_in_app,omitempty"`
	EmailAddress  string `protobuf:"bytes,14,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskEscalation) Reset() {
	*x = TaskEscalation{}
	mi := &file_pkg_proto_tasks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskEscalation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskEscalation) ProtoMessage() {}

func (x *TaskEscalation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_tasks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskEscalation.ProtoReflect.Descriptor instead.
func (*TaskEscalation) Descriptor() ([]byte, []int) {
	return file_pkg_proto_tasks_proto_rawDescGZIP(), []int{1}
}

func (x *TaskEscalation) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskEscalation) GetAdminId() uint32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *TaskEscalation) GetAppointmentId() uint32 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *TaskEscalation) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *TaskEscalation) GetModality() string {
	if x != nil {
		return x.Modality
	}
	return ""
}

func (x *TaskEscalation) GetAssignedTo() string {
	if x != nil {
		return x.AssignedTo
	}
	return ""
}

func (x *TaskEscalation) GetDaysOverdue() int32 {
	if x != nil {
		return x.DaysOverdue
	}
	return 0
}

func (x *TaskEscalation) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *TaskEscalation) GetDeadline() *timestamp.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *TaskEscalation) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TaskEscalation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskEscalation) GetSendEmail() bool {
	if x != nil {
		return x.SendEmail
	}
	return false
}

func (x *TaskEscalation) GetSendInApp() bool {
	if x != nil {
		return x.SendInApp
	}
	return false
}

func (x *TaskEscalation) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

// DailySummary represents a daily morning summary notification
type DailySummary struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TotalIncomplete int32                  `protobuf:"varint,2,opt,name=total_incomplete,json=totalIncomplete,proto3" json:"total_incomplete,omitempty"`
	UrgentCount     int32                  `protobuf:"varint,3,opt,name=urgent_count,json=urgentCount,proto3" json:"urgent_count,omitempty"`
	HighCount       int32                  `protobuf:"varint,4,opt,name=high_count,json=highCount,proto3" json:"high_count,omitempty"`
	MediumCount     int32                  `protobuf:"varint,5,opt,name=medium_count,json=mediumCount,proto3" json:"medium_count,omitempty"`
	LowCount        int32                  `protobuf:"varint,6,opt,name=low_count,json=lowCount,proto3" json:"low_count,omitempty"`
	DueTodayCount   int32                  `protobuf:"varint,7,opt,name=due_today_count,json=dueTodayCount,proto3" json:"due_today_count,omitempty"`
	OverdueCount    int32                  `protobuf:"varint,8,opt,name=overdue_count,json=overdueCount,proto3" json:"overdue_count,omitempty"`
	Breakdown       string                 `protobuf:"bytes,9,opt,name=breakdown,proto3" json:"breakdown,omitempty"` // Formatted breakdown string
	Subject         string                 `protobuf:"bytes,10,opt,name=subject,proto3" json:"subject,omitempty"`
	Message         string                 `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
	// Notification delivery preferences
	SendEmail     bool                 `protobuf:"varint,12,opt,name=send_email,json=sendEmail,proto3" json:"send_email,omitempty"`
	SendInApp     bool                 `protobuf:"varint,13,opt,name=send_in_app,json=sendInApp,proto3" json:"send_in_app,omitempty"`
	EmailAddress  string               `protobuf:"bytes,14,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	SummaryDate   *timestamp.Timestamp `protobuf:"bytes,15,opt,name=summary_date,json=summaryDate,proto3" json:"summary_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DailySummary) Reset() {
	*x = DailySummary{}
	mi := &file_pkg_proto_tasks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailySummary) ProtoMessage() {}

func (x *DailySummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_tasks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailySummary.ProtoReflect.Descriptor instead.
func (*DailySummary) Descriptor() ([]byte, []int) {
	return file_pkg_proto_tasks_proto_rawDescGZIP(), []int{2}
}

func (x *DailySummary) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DailySummary) GetTotalIncomplete() int32 {
	if x != nil {
		return x.TotalIncomplete
	}
	return 0
}

func (x *DailySummary) GetUrgentCount() int32 {
	if x != nil {
		return x.UrgentCount
	}
	return 0
}

func (x *DailySummary) GetHighCount() int32 {
	if x != nil {
		return x.HighCount
	}
	return 0
}

func (x *DailySummary) GetMediumCount() int32 {
	if x != nil {
		return x.MediumCount
	}
	return 0
}

func (x *DailySummary) GetLowCount() int32 {
	if x != nil {
		return x.LowCount
	}
	return 0
}

func (x *DailySummary) GetDueTodayCount() int32 {
	if x != nil {
		return x.DueTodayCount
	}
	return 0
}

func (x *DailySummary) GetOverdueCount() int32 {
	if x != nil {
		return x.OverdueCount
	}
	return 0
}

func (x *DailySummary) GetBreakdown() string {
	if x != nil {
		return x.Breakdown
	}
	return ""
}

func (x *DailySummary) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *DailySummary) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DailySummary) GetSendEmail() bool {
	if x != nil {
		return x.SendEmail
	}
	return false
}

func (x *DailySummary) GetSendInApp() bool {
	if x != nil {
		return x.SendInApp
	}
	return false
}

func (x *DailySummary) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *DailySummary) GetSummaryDate() *timestamp.Timestamp {
	if x != nil {
		return x.SummaryDate
	}
	return nil
}

var File_pkg_proto_tasks_proto protoreflect.FileDescriptor

const file_pkg_proto_tasks_proto_rawDesc = "" +
	"\n" +
	"\x15pkg/proto/tasks.proto\x12\x05tasks\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe3\x04\n" +
	"\x10TaskNotification\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\x12+\n" +
	"\x11notification_type\x18\x03 \x01(\tR\x10notificationType\x12\x18\n" +
	"\asubject\x18\x04 \x01(\tR\asubject\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12%\n" +
	"\x0eappointment_id\x18\x06 \x01(\rR\rappointmentId\x12!\n" +
	"\fpatient_name\x18\a \x01(\tR\vpatientName\x12\x1a\n" +
	"\bmodality\x18\b \x01(\tR\bmodality\x12\x1c\n" +
	"\tprocedure\x18\t \x01(\tR\tprocedure\x125\n" +
	"\bdue_date\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\adueDate\x126\n" +
	"\bdeadline\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\bdeadline\x12\x1a\n" +
	"\bpriority\x18\f \x01(\tR\bpriority\x12&\n" +
	"\x0fhours_until_due\x18\r \x01(\x05R\rhoursUntilDue\x12!\n" +
	"\fdays_overdue\x18\x0e \x01(\x05R\vdaysOverdue\x12\x1d\n" +
	"\n" +
	"send_email\x18\x0f \x01(\bR\tsendEmail\x12\x1e\n" +
	"\vsend_in_app\x18\x10 \x01(\bR\tsendInApp\x12#\n" +
	"\remail_address\x18\x11 \x01(\tR\femailAddress\"\xda\x03\n" +
	"\x0eTaskEscalation\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x19\n" +
	"\badmin_id\x18\x02 \x01(\rR\aadminId\x12%\n" +
	"\x0eappointment_id\x18\x03 \x01(\rR\rappointmentId\x12!\n" +
	"\fpatient_name\x18\x04 \x01(\tR\vpatientName\x12\x1a\n" +
	"\bmodality\x18\x05 \x01(\tR\bmodality\x12\x1f\n" +
	"\vassigned_to\x18\x06 \x01(\tR\n" +
	"assignedTo\x12!\n" +
	"\fdays_overdue\x18\a \x01(\x05R\vdaysOverdue\x12\x1a\n" +
	"\bpriority\x18\b \x01(\tR\bpriority\x126\n" +
	"\bdeadline\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\bdeadline\x12\x18\n" +
	"\asubject\x18\n" +
	" \x01(\tR\asubject\x12\x18\n" +
	"\amessage\x18\v \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"send_email\x18\f \x01(\bR\tsendEmail\x12\x1e\n" +
	"\vsend_in_app\x18\r \x01(\bR\tsendInApp\x12#\n" +
	"\remail_address\x18\x0e \x01(\tR\femailAddress\"\x96\x04\n" +
	"\fDailySummary\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12)\n" +
	"\x10total_incomplete\x18\x02 \x01(\x05R\x0ftotalIncomplete\x12!\n" +
	"\furgent_count\x18\x03 \x01(\x05R\vurgentCount\x12\x1d\n" +
	"\n" +
	"high_count\x18\x04 \x01(\x05R\thighCount\x12!\n" +
	"\fmedium_count\x18\x05 \x01(\x05R\vmediumCount\x12\x1b\n" +
	"\tlow_count\x18\x06 \x01(\x05R\blowCount\x12&\n" +
	"\x0fdue_today_count\x18\a \x01(\x05R\rdueTodayCount\x12#\n" +
	"\roverdue_count\x18\b \x01(\x05R\foverdueCount\x12\x1c\n" +
	"\tbreakdown\x18\t \x01(\tR\tbreakdown\x12\x18\n" +
	"\asubject\x18\n" +
	" \x01(\tR\asubject\x12\x18\n" +
	"\amessage\x18\v \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"send_email\x18\f \x01(\bR\tsendEmail\x12\x1e\n" +
	"\vsend_in_app\x18\r \x01(\bR\tsendInApp\x12#\n" +
	"\remail_address\x18\x0e \x01(\tR\femailAddress\x12=\n" +
	"\fsummary_date\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\vsummaryDateB\x11Z\x0fpkg/proto/tasksb\x06proto3"

var (
	file_pkg_proto_tasks_proto_rawDescOnce sync.Once
	file_pkg_proto_tasks_proto_rawDescData []byte
)

func file_pkg_proto_tasks_proto_rawDescGZIP() []byte {
	file_pkg_proto_tasks_proto_rawDescOnce.Do(func() {
		file_pkg_proto_tasks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_tasks_proto_rawDesc), len(file_pkg_proto_tasks_proto_rawDesc)))
	})
	return file_pkg_proto_tasks_proto_rawDescData
}

var file_pkg_proto_tasks_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_proto_tasks_proto_goTypes = []any{
	(*TaskNotification)(nil),    // 0: tasks.TaskNotification
	(*TaskEscalation)(nil),      // 1: tasks.TaskEscalation
	(*DailySummary)(nil),        // 2: tasks.DailySummary
	(*timestamp.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_pkg_proto_tasks_proto_depIdxs = []int32{
	3, // 0: tasks.TaskNotification.due_date:type_name -> google.protobuf.Timestamp
	3, // 1: tasks.TaskNotification.deadline:type_name -> google.protobuf.Timestamp
	3, // 2: tasks.TaskEscalation.deadline:type_name -> google.protobuf.Timestamp
	3, // 3: tasks.DailySummary.summary_date:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_proto_tasks_proto_init() }
func file_pkg_proto_tasks_proto_init() {
	if File_pkg_proto_tasks_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_tasks_proto_rawDesc), len(file_pkg_proto_tasks_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_tasks_proto_goTypes,
		DependencyIndexes: file_pkg_proto_tasks_proto_depIdxs,
		MessageInfos:      file_pkg_proto_tasks_proto_msgTypes,
	}.Build()
	File_pkg_proto_tasks_proto = out.File
	file_pkg_proto_tasks_proto_goTypes = nil
	file_pkg_proto_tasks_proto_depIdxs = nil
}
